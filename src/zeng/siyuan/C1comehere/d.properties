#Sun Jan 08 17:57:16 EST 2017
1099=222\nhttp\://mindmajix.com/solr-interview-questions
1098=222\nhttp\://www.kerneltraining.com/top-10-apache-solr-interviews-questions-answers/
1097=222\nhttp\://tekslate.com/solr-interview-questions/
1096=222\nhttps\://www.quora.com/What-are-the-question-asked-in-apache-solr-interview
1095=222\nhttp\://stackoverflow.com/questions/3206747/lucene-interview-questions
1094=222\nhttps\://intellipaat.com/interview-question/apache-solr-interview-questions/
1093=222\nhttps\://www.edureka.co/blog/interview-questions/cassandra-interview-questions/
1092=222\nhttps\://thecloudview.wordpress.com/2015/04/29/cassandra-real-interview-questions-and-answers/
1091=222\nhttp\://career.guru99.com/top-23-cassandra-interview-questions/
1090=222\nhttp\://www.techoism.com/apache-solr-interview-questions/
1089=http\://stackoverflow.com/questions/1091045/is-it-good-practice-to-use-java-lang-string-intern
1088=111\nhttp\://www.oracle.com/technetwork/articles/java/jconsole-1564139.html
1087=https\://www.englishforums.com/English/SpinByproductSideProduct/bvhllx/post.htm
1086=111\nhttp\://stackoverflow.com/questions/458817/java-swing-libraries-tools-layout-managers
1085=222\nhttp\://www.codeodor.com/index.cfm/2009/1/29/Answering-the-100-Interview-Questions-for-Software-Developers-Functional-Design/2705
1084=js faces
1083=common relationships
1082=http\://www.bing.com/images/search?q\=relativistic+thinking&view\=detailv2&&id\=2DA6C6EAA3EB14BAEF00CED3C979BBB5634CC6EA&selectedIndex\=11&ccid\=P7D6iuZY&simid\=607999437196296919&thid\=OIP.P7D6iuZYZCZWKjB9ktEBMAEsCx&ajaxhist\=0
1081=http\://stackoverflow.com/questions/1913098/what-is-the-difference-between-an-interface-and-abstract-class
1080=https\://www.englishforums.com/English/SpinByproductSideProduct/bvhllx/post.htm
1079=sd instinctive
1078=sd viscera
1077=sd fuse
1076=333\nhttps\://www.quora.com/What-is-the-Hashing-technique
1075=222\nhttp\://www.agilemodeling.com/essays/prioritizedRequirements.htm
1074=150\nhttp\://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html
1073=http\://www.w3schools.com/jquery/jquery_chaining.asp
1072=http\://www.c-sharpcorner.com/UploadFile/cda5ba/object-oriented-programming-with-real-world-scenario/
1071=55\nhttp\://www.short-funny.com/best-knock-jokes-2.php
1070=How can you reduce the user\u2019s perception of waiting when some functions take a lot of time - See more at\: http\://noop.nl/2009/01/100-interview-questions-for-software-developers.html\#sthash.wwvCyXLz.dpuf
199=devcenter 
198=bi exmor driver front camera
197=devcenter 
196=devcenter 
195=devcenter
194=http\://api.ning.com/files/8W5ARlmXvRn-q7LvrVh1ohMnUTttoAFIFGYK1XYL1SaQ8zEXEzBQZ4wWfvf5M3K8eaC5nFp-0IJ*zSDEnnY1GdscEVGUlErQ/BIGDATAPOSTER.pdf
193=https\://www.bing.com/images/search?q\=big+data+solutions&view\=detailv2&&id\=674D6133D2C97CA1CF5405BBAE336E17F593005B&selectedIndex\=43&ccid\=A3xa%2fRnm&simid\=608024532655998823&thid\=OIP.M037c5afd19e677283673bd583ee8d027o0&ajaxhist\=0
192=devcenter 
191=http\://www.softwaretestinghelp.com/loadrunner-interview-questions-and-best-answers/
190=http\://www.careerride.com/performance-testing-interview-questions.aspx
1069=55\nhttps\://www.codeproject.com/articles/28309/design-pattern-faq-part-training
1068=smoke test
1067=http\://www.geeksforgeeks.org/can-we-overload-or-override-static-methods-in-java/
1066=sd brazen
1065=http\://www.geeksforgeeks.org/can-we-overload-or-override-static-methods-in-java/
1064=http\://javahungry.blogspot.com/2013/06/difference-between-string-stringbuilder.html
1063=sd brash
1062=sd insolent
1061=111\nhttps\://www.toptal.com/nodejs/interview-questions
1060=sd bugger
189=https\://intellipaat.com/interview-question/apache-storm-interview-questions/
188=https\://www.bing.com/images/search?q\=mongodb+vs+cassandra+vs+hbase&view\=detailv2&&id\=D833DC96A50702939565001DD5140D6A95232111&selectedIndex\=31&ccid\=z1jrAdhA&simid\=608018506817408020&thid\=OIP.Mcf58eb01d8408f0b684be0ed33356d0fo0&ajaxhist\=0
187=https\://www.bing.com/images/search?q\=mongodb+vs+cassandra+vs+hbase&view\=detailv2&id\=9111D15699865D58061F3FC111F058937F04B898&selectedindex\=8&ccid\=YR73nUs6&simid\=608020714423845019&thid\=OIP.M611ef79d4b3a07cea7096d96095afb28o0&mode\=overlay&first\=1
186=https\://www.bing.com/images/search?q\=mongodb+vs+hadoop&view\=detailv2&&id\=6520F5C0E37F5D14F36F1321EF4036252A403062&selectedIndex\=1&ccid\=woLslzu9&simid\=608018785994605987&thid\=OIP.Mc282ec973bbda75beca5c74afbd92873o0&ajaxhist\=0
185=http\://www.sanfoundry.com/mongodb-questions-answers-sharding-concepts/
184=https\://docs.mongodb.com/manual/reference/glossary/
183=http\://www.short-funny.com/funniest-jokes-2.php
182=http\://www.criticalthinking.org/resources/resourcesImages/posters/posterElementsBIG.jpg
181=\rmyown carerer\n Dufgt \r\n\r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n2) Do you know any big gossips?\r\n
180=https\://docs.mongodb.com/manual/reference/glossary/
1059=111\nhttp\://www.buggybread.com/2015/02/java-j2ee-technical-lead-interview.html
1058=sd fluke
1057=sd sagacity
1056=111\nhttp\://www.geekinterview.com/Interview-Questions/J2EE/Java-Patterns
1055=sd primed
1054=java architect learning path
1053=swing libraries
1052=111\nhttps\://intellipaat.com/interview-question/drools-interview-questions/
1051=111\nhttps\://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide
1050=sd denunciation
179=https\://docs.mongodb.com/manual/reference/glossary/
178=https\://docs.mongodb.com/manual/reference/glossary/
177=sd sherd
176=sd shard
175=mongodb starting with\=https\://code.tutsplus.com/tutorials/getting-started-with-mongodb-part-1--net-22879
174=bi terminal for windows
173=mongodb tutorial\=http\://www.hongkiat.com/blog/webdev-with-mongodb-part1/
172=c\:
171=bi mongodb beiginner tutorial
170=bi mongodb beiginner tutorial\n
1049=common relationship between everythings
1048=everything about everything
1047=111\nhttps\://www.toptal.com/git/interview-questions
1046=111\nhttp\://www.interestingfacts.org/
1045=spin off vs by product
1044=111\nhttps\://www.toptal.com/git/interview-questions
1043=111\nhttp\://career.guru99.com/top-40-interview-questions-on-git/
1042=http\://career.guru99.com/top-40-interview-questions-on-git/
1041=111\nhttp\://howtodoinjava.com/spring/spring-core/top-spring-core-interview-questions-with-answers/
1040=111\nhttp\://career.guru99.com/top-20-maven-interview-questions/
169=http\://javarevisited.blogspot.com/2011/09/swing-interview-questions-answers-in.html
168=https\://www.frontendjournal.com/most-common-technical-interview-question-for-frontend-developers/
167=https\://www.toptal.com/web/interview-questions
166=https\://www.tutorialspoint.com/software_engineering/software_engineering_interview_questions.htm
165=http\://javarevisited.blogspot.com/2012/06/20-design-pattern-and-software-design.html
164=http\://noop.nl/2009/01/100-interview-questions-for-software-developers.html
163=https\://www.tutorialspoint.com/design_pattern/design_pattern_interview_questions.htm
162=http\://www.journaldev.com/3633/hibernate-interview-questions-and-answers
161=https\://www.tutorialspoint.com/spring/spring_interview_questions.htm
160=https\://www.tutorialspoint.com/maven/maven_interview_questions.htm
1039=111\nhttp\://career.guru99.com/top13-apache-storm-interview-questions/
1038=111\nhttp\://www.careerride.com/Spring-Interview-Question.aspx
1037=111\nhttp\://career.guru99.com/top-14-kafka-interview-questions/
1036=111\nhttp\://www.dailywritingtips.com/100-mostly-small-but-expressive-interjections/
1035=111\nhttp\://tutorials.jenkov.com/java-collections/index.html
1034=sd kinesthetic
1033=sd daze
1032=sd daze
1031=How can I monitor a Java application
1030=sd stoop
159=http\://interviewquestionsanswerspdf.com/2014/04/data-mining-interview-questions-and-answers/
158=http\://www.testingbrain.com/interview/oracle-interview-questions.html
157=http\://javarevisited.blogspot.com/2011/09/swing-interview-questions-answers-in.html
156=https\://www.tutorialspoint.com/restful/restful_interview_questions.htm
155=https\://www.codementor.io/reactjs/tutorial/5-essential-reactjs-interview-questions
154=http\://career.guru99.com/top-25-interview-questions-on-scala/
153=https\://blog.risingstack.com/node-js-interview-questions/
152=https\://www.codementor.io/angularjs/tutorial/angularjs-interview-questions-sample-answers
151=https\://www.tutorialspoint.com/java8/java8_interview_questions.htm
150=http\://www.edureka.co/blog/interview-questions/top-apache-spark-interview-questions-2016/
1029=http\://spark.apache.org/sql/
1028=https\://spark.apache.org/docs/latest/sparkr.html
1027=http\://spark.apache.org/graphx/
1026=relativistic thinking
1025=111\nhttps\://www.dezyre.com/article/top-100-hadoop-interview-questions-and-answers-2017/159\#
1024=111\nhttp\://www.fromdev.com/2010/12/interview-questions-hadoop-mapreduce.html
1023=111\nhttp\://www.bigdataanalyst.in/spark-interview-questions/
1022=111\nhttp\://hadoopexam.com/Apache_Hive_Interview_Questions.pdf
1021=sd kinesthetic
1020=111\nhttp\://hortonworks.com/hadoop-tutorial/hands-on-tour-of-apache-spark-in-5-minutes/
149=https\://intellipaat.com/interview-question/apache-storm-interview-questions/
148=http\://www.edureka.co/blog/interview-questions/top-apache-kafka-interview-questions-for-beginners/
147=https\://intellipaat.com/interview-question/cassandra-interview-questions/
146=http\://r.search.yahoo.com/_ylt\=AwrT6VwVBEpYv4AAXBwnnIlQ;_ylu\=X3oDMTByb2lvbXVuBGNvbG8DZ3ExBHBvcwMxBHZ0aWQDBHNlYwNzcg--/RV\=2/RE\=1481274518/RO\=10/RU\=https%3a%2f%2fintellipaat.com%2finterview-question%2fcassandra-interview-questions%2f/RK\=0/RS\=jwOCyvhNihd.34YaZAGf1xeJ2dM-
145=https\://www.tutorialspoint.com/mongodb/mongodb_interview_questions.htm
144=music
143=abuizeng
142=abuizeng
141=abuizeng
140=abuizeng
1019=111\nhttp\://tekslate.com/cassandra-interview-questions-and-answers
1018=111\nhttps\://thecloudview.wordpress.com/2015/04/29/cassandra-real-interview-questions-and-answers/
1017=111\nhttp\://career.guru99.com/top-23-cassandra-interview-questions/
1016=111\nhttps\://intellipaat.com/interview-question/cassandra-interview-questions/
1015=111\nhttp\://yonik.com/getting-started-with-solr/
1014=Apache Solr vs Elasticsearch\=http\://solr-vs-elasticsearch.com/
1013=elasticsearch 
1012=111\nhttps\://www.tutorialspoint.com/nodejs/nodejs_buffers.htm
1011=java memory leak
1010=http\://www.lucidity.com/LucidDreamingFAQ2.html\#EWLD
139=bi NoSuchMethodError\: org.apache.http.impl.conn.CPool.setValidateAfterInactivity
138=bi NoSuchMethodError\: org.apache.http.impl.conn.CPool.setValidateAfterInactivity
137=abuizeng
499=i don't want to develope relationship with thsese guys because t it sticks and so harda nd yest so hard
136=bi java.lang.NoSuchFieldError\: INSTANCE
498=git commands\=https\://git-scm.com/book/en/v2/Git-Commands-Setup-and-Config
135=abuizeng
497=a
134=abuizeng
496=a
133=abuizeng
495=a
132=abuizeng
494=a
131=\rno\n Dufgt \r\n\r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n1) What was the last picture you took with your phone?\r\n
493=ice age\=http\://123movies.is/film/ice-age-2023/
130=abuizeng
492=Ice Age\: Continental Drift 
491=rushhour 
490=https\://help.github.com/
1009=222\nhttp\://howtodoinjava.com/java-8/java-8-optionals-complete-reference/
1008=222\nhttp\://howtodoinjava.com/java-8/calculate-difference-between-two-dates-in-java/
1007=convergent thinking
1006=divergent thinking
1005=sd extravaganza
1004=http\://searchdatabackup.techtarget.com/definition/data-archiving
1003=222\nhttp\://tutorials.jenkov.com/java-concurrency/volatile.html
1002=hash techniquer
1001=222\nhttps\://msdn.microsoft.com/en-us/library/ff647682.aspx
1000=222\nhttps\://www.frontendjournal.com/most-common-technical-interview-question-for-frontend-developers/
129=abuizeng
128=abuizeng
127=abuizeng
489=Ice Age\: Continental Drift 
126=abuizeng
488=java 8 best practice\=https\://zeroturnaround.com/rebellabs/java-8-best-practices-cheat-sheet/
125=abuizeng
487=https\://zeroturnaround.com/rebellabs/java-8-best-practices-cheat-sheet/
124=abuizeng
486=there is no lure there is sexual desire ther ei sno desire it goes awayand never come back that is the desire go
123=abuizeng
485=music
122=abuizeng
484=music
121=abuizeng
483=http\://winterbe.com/posts/2015/05/22/java8-concurrency-tutorial-atomic-concurrent-map-examples/
120=abuizeng
482=http\://winterbe.com/posts/2015/04/30/java8-concurrency-tutorial-synchronized-locks-examples/
481=\u8BB8\u5DCD \u66FE\u7ECF\u7684\u4F60 \u9AD8\u6E05\u73B0\u573A\u7248.mp4 
480=java 8 concurrency\=http\://winterbe.com/posts/2015/04/07/java8-concurrency-tutorial-thread-executor-examples/
119=abuizeng
118=abuizeng
117=zengb45
479=http\://www.testingbrain.com/interview/oracle-interview-questions.html/2
116=bi intellj multiple caret\n
478=l\nhttp\://winterbe.com/posts/2014/03/16/java-8-tutorial/
115=conversation between you and me possiblitiy and abetween you ane me 
477=l\nhttp\://winterbe.com/posts/2015/04/07/java8-concurrency-tutorial-thread-executor-examples/
114=possibilities becwtween you and me
476=C\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
113=how to be the beset praogrammer in the world
475=java 8\=C\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
112=why do they hodl these because they want ot me to behave like that this is the session to be a this person
474=http\://www.manning.com/ebookoffer
111=n o strings attached and what it means to be together
473=Ice Age\: Continental Drift 
110=hold yout thought and focus on noe only focus on the things
472=Ice Age\: Continental Drift 
471=Ice Age\: Continental Drift 
470=ice Ice Age\: Continental Drift 
109=hold yout thought and focus on noe only focus on the things
108=music
107=music
469=onenote 
106=\twhat is the feeing and a idea hit me and it i sso hot and i know that iwt i s
468=OneNote \u7B14\u8BB0\u672C\=C\:\\Users\\SiyuanZeng's\\Documents\\OneNote \u7B14\u8BB0\u672C
105=ow to category things and give them a thing all teoghter 
467=onenote 
104=what is the idea of a idea and how to aoociating eotehter with theverything and even one sinmple idea how does it compass all thet hitng s in the worl and all the thinking
466=https\://en.wikipedia.org/wiki/Software_Engineering_Body_of_Knowledge
103=computing
465=a
102=it is all about ht time and location and another parameter witho whom
464=a
101=i willl last everything only thine thing that i can' t foreget and all the test na dlife will be lost and gonea
463=a
100=bi What is a Resource in REST?\r\n\r\n\r\n
462=a
461=bi critical thinking
460=c\nmusic
459=joke you wi ll rememer and talk about nonsense you will remember that don't do that
458=wei ni wo shou leng feng chui\=http\://listenonrepeat.com/?v\=ZD57Fv_V74s\#%E6%9E%97%E6%86%B6%E8%93%AE_Sandy_Lam%E3%80%90%E7%82%BA%E4%BD%A0%E6%88%91%E5%8F%97%E5%86%B7%E9%A2%A8%E5%90%B9_Suffer_for_you%E3%80%91Official_Music_Video
457=abuizeng
456=https\://git-scm.com/book/en/v2
455=python\=http\://www.learnpython.org/
454=a
453=bi mode operation
452=a
451=a
450=a
449=a
448=Ice Age\: Continental Drift 
447=Ice Age\: Continental Drift 
446=Ice Age\: Continental Drift 
445=Ice Age\: Continental Drift 
444=Ice Age\: Continental Drift 
443=ll\nhttp\://www.rd.com/jokes/
442=TodoApp
441=siyuanzeng@hotmail
440=hotmail
1312=ll\nhttp\://www.w3schools.com/php/default.asp
1311=http\://softwareengineering.stackexchange.com/questions/219976/whats-the-difference-between-robustness-and-fault-tolerance
1310=http\://rdingwall.com/2010/02/10/correctness-vs-robustness/
439=http\://www.engineeringandcareering.co.uk/2013/05/the-well-rounded-technical-lead-model.html
438=abuizeng
437=rushhour 
799=45\nhttps\://www.tutorialspoint.com/nodejs/nodejs_repl_terminal.htm
436=rush hour 
798=60\nhttp\://tutorials.jenkov.com/software-architecture/load-balancing.html
435=http\://www.dailywritingtips.com/20-types-and-forms-of-humor/
797=60\nhttp\://tutorials.jenkov.com/software-architecture/caching-techniques.html
434=bi types of jokes\n
796=RSS Feed
433=outlook\=C\:/Program Files (x86)/Microsoft Office/root/Office16/OUTLOOK.EXE
795=l\nhttps\://www.tutorialspoint.com/hibernate/hibernate_sessions.htm
432=ZBox\=C\:\\Users\\SiyuanZeng's\\Downloads\\ZBox
794=https\://www.tutorialspoint.com/nodejs/nodejs_callbacks_concept.htm
431=friends51 vidio 
793=http\://www.w3schools.com/jquery/jquery_events.asp
430=gitbash
792=
791=sprng 3 vs spring 4
790=When do you use polymorphism and when do you use delegates?
1309=http\://rdingwall.com/2010/02/10/correctness-vs-robustness/
1308=333\nhttp\://www.orafaq.com/faq/what_are_the_difference_between_ddl_dml_and_dcl_commands
1307=http\://stackoverflow.com/questions/79923/what-and-where-are-the-stack-and-heap
1306=http\://stackoverflow.com/questions/16033704/add-array-of-string-to-database-in-hibernate
1305=ll\nhttps\://www.strataframe.net/dataaccesslayerdetail.aspx
1304=ll\nhttp\://www.w3schools.com/php/default.asp
1303=https\://www.edureka.co/blog/introduction-to-cassandra-column-family/
1302=ll\nhttps\://www.edureka.co/blog/introduction-to-cassandra-column-family/
1301=l\nhttp\://tutorials.jenkov.com/scala/index.html
1300=http\://www.roseindia.net/hibernate/projections/hibernate-projections.shtml
429=gitbash
428=gitbash
427=gitbash
789=sd dormant
426=gitbash
788=sd arse
425=gitbash
787=1\nhello
424=gitbash
786=1\nhello
423=gitbash
785=devcenter 
422=TodoApp
784=java programmer interview
421=bi friends season 5 episode 1
783=120\nhttp\://stackoverflow.com/questions/2841212/what-is-the-difference-between-spring-struts-hibernate-javaserver-faces-tape
420=Scala\=C\:/Users/SiyuanZeng's/Downloads/ZBox/a - Copy.html
782=l\nhttps\://www.tutorialspoint.com/struts_2/struts_interview_questions.htm
781=http\://www.w3schools.com/jquery/jquery_selectors.asp
780=120\nhttps\://www.tutorialspoint.com/maven/maven_deployment_automation.htm
419=github login
418=C\:\\Developer\\Git\\bin\\sh.exe --login -i
417=git bash
779=60\nhttps\://www.tutorialspoint.com/hibernate/hibernate_batch_processing.htm
416=git bash\=C\:\\Developer\\Git\\bin\\sh.exe
778=sd hallucinogenic
415=gitbash 
777=sd latent
414=abuizeng
776=120\nhttp\://tutorials.jenkov.com/software-architecture/scalable-architectures.html
413=TodoApp
775=120\nhttp\://tutorials.jenkov.com/software-architecture/event-driven-architecture.html
412=http\://www.steverrobbins.com/articles/ceojob/
774=45\nhttps\://www.tutorialspoint.com/spring/event_handling_in_spring.htm
411=https\://www.indeed.com/hire/cto?matchtype\=be&network\=search&device\=c&keyword\=cto%20job%20description&query\=cto%20job%20description&utm_source\=bing&utm_medium\=cpc&utm_term\=cto+job+description&utm_campaign\=job+description+pages+title+0+%28exact%29&utm_medium\=cpc&utm_source\=google_search&utm_campaign\=31809308&utm_term\=kwd-31085561359?utm_source\=bing&utm_content\=cto%20job%20description
773=45\nhttp\://www.journaldev.com/2905/hibernate-tomcat-jndi-datasource-example-tutorial
410=http\://hiring.monster.com/hr/hr-best-practices/recruiting-hiring-advice/job-descriptions/java-architect-job-description.aspx
772=l\nhttp\://www.javatpoint.com/hibernate-interview-questions
771=60\nhttps\://www.tutorialspoint.com/spring/custom_events_in_spring.htm
770=120\nhttps\://www.tutorialspoint.com/struts_2/struts_exception_handling.htm
409=http\://winterbe.com/posts/2014/07/31/java8-stream-tutorial-examples/
408=friends51 video  
407=time laugh that is all
769=60\nhttps\://www.tutorialspoint.com/hibernate/hibernate_configuration.htm
406=http\://career.guru99.com/top-25-jms-java-message-service-interview-questions/
768=180\nhttp\://tutorials.jenkov.com/software-architecture/soa.html
405=blog 
767=https\://www.tutorialspoint.com/spring/event_handling_in_spring.htm
404=TodoApp
766=https\://www.tutorialspoint.com/spring/spring_java_based_configuration.htm
403=https\://www.bing.com/images/search?q\=machine+learning+example&view\=detailv2&id\=4A9BBA60AFF3E1EFDD953E81FF41F0334DA03621&selectedindex\=21&ccid\=TWv2h2Fm&simid\=608024206245629080&thid\=OIP.M4d6bf6876166d99b074d9d0c5bf4dabeo0&mode\=overlay&first\=1
765=https\://www.tutorialspoint.com/struts_2/struts_themes_templates.htm
402=friends51 vidio 
764=https\://www.tutorialspoint.com/spring/spring_interview_questions.htm
401=talk to achive something or get something finformaiton\ngive love to get love\ni give you love and get nothing
763=https\://www.tutorialspoint.com/nodejs/nodejs_express_framework.htm
400=i don't want to talk with you i don't want to give you any love
762=https\://www.tutorialspoint.com/hibernate/hibernate_configuration.htm
761=http\://www.w3schools.com/jquery/jquery_syntax.asp
760=http\://www.criticalthinking.org/resources/resourcesImages/posters/posterFransGuidelinesBIG.jpg
759=180\nhttps\://en.wikipedia.org/wiki/Interface_segregation_principle
758=https\://www.bing.com/images/search?q\=poor+listening+skills&view\=detailv2&&id\=2FA13413747676BE4CC67277A8D56422A3332006&selectedIndex\=25&ccid\=cm0izSbf&simid\=607996894577756627&thid\=OIP.M726d22cd26df1067ba9902cad58cfd60o0&ajaxhist\=0
757=sd solidity
756=Rackspace
755=emacs examples
754=sd conceive
753=Can we overload the static method?
752=30\nhttp\://java-source.net/open-source/profilers
751=180\nhttps\://www.tutorialspoint.com/design_pattern/composite_pattern.htm
750=sd narcotics
749=https\://www.tutorialspoint.com/nodejs/nodejs_event_emitter.htm
748=http\://tutorials.jenkov.com/software-architecture/client-server-architecture.html
747=sd toupee
746=http\://tutorials.jenkov.com/software-architecture/client-server-architecture.html
745=120\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
744=120\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
743=http\://tutorials.jenkov.com/software-architecture/computer-architecture.html
742=what is call back?
741=https\://www.tutorialspoint.com/struts_2/struts_themes_templates.htm
740=https\://www.tutorialspoint.com/struts_2/struts_value_stack_ognl.htm
739=sd jinx
738=sd instigator
737=http\://tutorials.jenkov.com/software-architecture/single-process-architecture.html
736=sd pendulum
735=https\://www.tutorialspoint.com/nodejs/nodejs_event_loop.htm
734=sd shrug
733=sd filler
732=sd oddball
731=45\nhttps\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=91015B5F8BF17E2DE5881116F42A9A75B31498A9&selectedIndex\=0&ccid\=2M0rjgX0&simid\=607992840123583741&thid\=OIP.Md8cd2b8e05f4593005c9e4cca03c599eo0&ajaxhist\=0
730=15\nhttps\://intellipaat.com/tutorial/scala-tutorial/
729=spring 3 vs spring 4
728=https\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=91015B5F8BF17E2DE5881116F42A9A75B31498A9&selectedIndex\=0&ccid\=2M0rjgX0&simid\=607992840123583741&thid\=OIP.Md8cd2b8e05f4593005c9e4cca03c599eo0&ajaxhist\=0
727=http\://tutorials.jenkov.com/software-architecture/index.html
726=https\://projects.spring.io/spring-boot/
725=hotmail resume\=https\://onedrive.live.com/edit.aspx?cid\=6a74652c5386c5a5&page\=view&resid\=6A74652C5386C5A5\!9569&parId\=6A74652C5386C5A5\!114&app\=Word
724=l\nwhat is spring boot
723=l\nhttps\://www.oreilly.com/ideas/what-is-hadoop
722=https\://www.tutorialspoint.com/ruby-on-rails/rails-scaffolding.htm
721=l\nhttp\://javarevisited.blogspot.com/2011/03/10-interview-questions-on-singleton.html
720=sd erotic
719=sd amygdala
718=sd paralysis
717=sd attest
716=l\nhttps\://www.oreilly.com/ideas/what-is-hadoop
715=l\nhttp\://www.informationweek.com/big-data/software-platforms/how-to-explain-hadoop-to-non-geeks/d/d-id/899721
714=l\nhttp\://blog.cloudera.com/blog/2014/07/apache-hive-on-apache-spark-motivations-and-design-principles/
713=https\://www.tutorialspoint.com/hibernate/hibernate_architecture.htm
712=development enviroment configuration
711=l\nhttps\://www.tutorialspoint.com/hibernate/hibernate_architecture.htm
710=l\nhttps\://docs.oracle.com/javase/tutorial/java/generics
709=120\nhttp\://www.imdb.com/title/tt0120812/quotes
708=sd retract
707=sd premonition
706=120\nhttp\://www.imdb.com/title/tt0120812/quotes
705=why spark hive pig
704=l\nhttps\://docs.oracle.com/javase/tutorial/java/generics/
703=niginx nginx
702=l\nhttp\://tutorials.jenkov.com/scala/index.html
701=java 8 lambda expression passing comparator
700=l\nhttp\://docs.scala-lang.org/overviews/?_ga\=1.32249278.1253417003.1481852729
99=maybe yeas mayebe not but it an't matter\r\n ufgt \r\n\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 05\:56 am\r\nhow can i know that i bump into something special somtehing else \r\n\r\n\r\n
98=a lot of things i never know but it an't matter because i don't need ti \r\n ufgt \r\n\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 05\:40 am\r\nwhat do i need to know about one word a word a thing one thing like Walmart\r\n\r\n\r\n
97=\rwhy is more import\n ufgt \r\n\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 04\:57 am\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 04\:57 am\r\n\rassociate everything together and know what you are doing\n\r\nGood Morning C1 world, Wed, Sep 7, 2016 at 10\:42 am\r\nGood Morning C1 world, Wed, Sep 7, 2016 at 10\:42 am\r\nhow to why the big picture is improtant\r\n\r\nGood Morning C1 world, Wed, Sep 7, 2016 at 09\:39 am\r\nwhat is the big peicture and what ootl do they use to create the application\r\n\r\n\r\n\r\n\r\n\r\n\r\n
96=it is still here\r\n ufgt \r\n\r\nthis oen is still hereGood Morning C1 world, Thu, Sep 8, 2016 at 04\:40 amwht are the io since everything is about crude\r\n\r\nGood Morning C1 world, Thu, Dec 8, 2016 at 01\:23 am\r\n\r\n\r\nthis oen is still hereGood Morning C1 world, Thu, Sep 8, 2016 at 04\:40 amwht are the io since everything is about crude\r\n\r\n\r\n\r\n\r\n
95=this oen is still here\r\n ufgt \r\n\r\nGood Morning C1 world, Thu, Sep 8, 2016 at 04\:40 am\r\nwht are the io since everything is about crude\r\n\r\n\r\n
94=care gives away mysel fand make myself ont the only one 
93=snag
92=snag
91=music
90=programs 
89=gitdd add commit git push command 
88=snag
87=snag 
86=snag 
85=snag 
84=snag 
83=snag 
82=snag 
81=snag
80=snag 
1299=http\://stackoverflow.com/questions/7498205/when-to-use-hibernate-projections
1298=sd filtration
1297=java naming converntion and best practive
1296=reverse your viewpoint
1295=l\nhttp\://blog.flux7.com/blogs/docker/docker-tutorial-series-part-1-an-introduction
1294=https\://www.codeproject.com/articles/98598/how-i-explained-design-patterns-to-my-wife-part
1293=https\://en.wikipedia.org/wiki/Extreme_programming
1292=https\://community.oracle.com/thread/601313
1291=sd sugarcoat
1290=sd witticism
79=snag\=C\:/SoftwareInstallation/Media/TechSmith/Snagit/Snagit32.exe
78=snag 
77=I s there something i can do and use immediately immediate learning and useing 
76=know my self talking to myself i will learn something i will know whtat it isi all myself and that is it \nall myself \ni want to know how i feel and make others feel
75=what do i desire
74=what do i need
73=what do i want 
72=i lost all my data
71=solr start folder 
70=solr
1289=sd concretion
1288=Liskov
1287=ll\nhttps\://www.bing.com/images/search?q\=hadoop+system&view\=detailv2&&id\=AC7907299644BA707B53CF05D279925F3D835430&selectedIndex\=31&ccid\=SNZ5GXp0&simid\=608052978264049889&thid\=OIP.M48d679197a74bec3dad70df98166fe47H0&ajaxhist\=0
1286=ll\nhttps\://www.bing.com/images/search?q\=hadoop+system&view\=detailv2&&id\=5F9DD1A278201A97994A0BEB5A366882A94BD6E7&selectedIndex\=9&ccid\=0rsVJRwp&simid\=608023866968902798&thid\=OIP.Md2bb15251c2964a7d86b359a10625298o0&ajaxhist\=0
1285=ll\nhttps\://www.bing.com/images/search?q\=hadoop+system&view\=detailv2&&id\=2B7B15CDF71B320E87256DFD4C70F91F12E8C2C4&selectedIndex\=2&ccid\=Y6aHwNqU&simid\=608043250164435253&thid\=OIP.M63a687c0da94e9ad555d38f4be470ae7H0&ajaxhist\=0
1284=l\nhttps\://www.tutorialspoint.com/ruby-on-rails/rails-introduction.htm
1283=sd midget
1282=ll\nhttp\://www.short-funny.com/funniest-jokes-3.php
1281=333\nhttps\://www.tutorialspoint.com/design_pattern/command_pattern.htm
1280=x\nhttp\://diply.com/publisher/interesting-things
69=walmart timesheet 
68=walmart timesheet 
67=movie
66=movies
65=movies
64=family
63=interjections
62=family
61=bi gitignore common file
60=rush hour
1279=x\nhttp\://diply.com/publisher/interesting-things
1278=cassandra column column family
1277=ll\nhttps\://www.bing.com/images/search?q\=hadoop&view\=detailv2&&id\=30FEEE970A539380BA9581C52BC966BA41D9306D&selectedIndex\=14&ccid\=GLkqrvAD&simid\=608033277242704788&thid\=OIP.M18b92aaef0032494ecd8158251b5b659o0
1276=ll\nhttp\://javarevisited.blogspot.com/2014/07/top-50-java-multithreading-interview-questions-answers.html
1275=333\nhttp\://stackoverflow.com/questions/1568834/whats-the-difference-between-rest-restful
1274=ll\nhttp\://class.ezinemark.com/top-10-interview-questions-on-object-oriented-programming-16fd36abfc7.html
1273=ll\nhttp\://www.globalguideline.com/interview_questions/Questions.php?sc\=OOAD_Object-oriented_analysis_and_design_
1272=ll\nhttps\://careercup.com/page?pid\=object-oriented-design-interview-questions
1271=heap vs stack
1270=sd octet
59=Movies\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Movies.kpl
58=rush hour
399=thre is no love in this kind of company
57=Topogrophy\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Typogophy.kpl
398=i don't know you have so much feeling sofor me \nhow can i make you really happy
56=quote\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Quotes.kpl
397=yes \ndance in the tain ebrace the love\nadance in the rain \r\n Dufgt \r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n8) Have you ever danced in the rain?\r\n\r\n
55=Best love quote\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Best Love Quote.kpl
396=reply to the last waord and ignre the rest because you want me to ignore it \ntoo much\njust enjoy all the feelings \nthat is all
54=movie\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie
395=reply to the last waord and ignre the rest because you want me to ignore it \ntoo much\njust enjoy all the feelings \nthat is all
53=rush hour
394=a1\n2\n3\n4\n5\ny\ner\nyt\ny\nu\ni\n\no\n
52=rush hour\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Rush hour.kpl
393=y\nu\ni\no\np\n
51=strong bad email\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Strong bad emails.kpl
392=a \nb\nr\nt\ny\ny\n
50=friends51 vidio 
391=e\nr\nt
390=q\nw\ne
1269=sd Cannabis
1268=ll\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
1267=ll\nhttps\://www.tutorialspoint.com/struts_2/struts_themes_templates.htm
1266=ll\nhttps\://www.tutorialspoint.com/struts_2/struts_themes_templates.htm
1265=ll\nhttp\://docs.aws.amazon.com/ElasticMapReduce/latest/ManagementGuide/emr-gs-launch-sample-cluster.html
1264=design pattern examples
1263=333\nhttps\://www.bing.com/images/search?q\=java+comparisons&view\=detailv2&&id\=CBF725AA656E68FB5E5281714D6DF90775988662&selectedIndex\=5&ccid\=9tiDhEdX&simid\=607993475792506452&thid\=OIP.Mf6d8838447574e92187e0fd87964935bo0&ajaxhist\=0
1262=ll\nhttp\://www.cygnet-infotech.com/blog/struts-2-vs-springmvc
1261=docker tutorial
1260=ll\nhttp\://www.testingbrain.com/interview/oracle-interview-questions.html
49=mike2\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Mike Sui on a Train- The most AMAZING imitation video ever\!\u3010Mike\u968B\u51FA\u54C1\u3011\u8001\u5916\u5C4C\u4E1D2 - YouTube.MKV
48=mike 2\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Mike Sui on a Train- The most AMAZING imitation video ever\!\u3010Mike\u968B\u51FA\u54C1\u3011\u8001\u5916\u5C4C\u4E1D2 - YouTube.MKV
389=a\nb\nc\nd\ne\nf
47=mike1\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\Mike Sui at the bar (w_ English Subtitles) - YouTube.MP4
388=a\nb\nc\nd\ne\nf
46=family
387=a\nb\nc\ne\nd
45=family\=C\:\\Users\\SiyuanZeng's\\Videos\\Movie\\List-Family Guy.kpl
386=ab\nb\nc\nd\ne
44=history
385=j\nk\nl
43=history 5
384=a\nb c\nb
42=history
383=a\nb\nc
41=history
382=a\na\nb\nc\n
40=history 5
381=https\://www.bing.com/images/search?q\=creative+thinking+poster&view\=detailv2&&id\=9386DC5175BBDA791B86AD30BBB69D0CB117EB77&selectedIndex\=200&ccid\=8%2beyy5zh&simid\=608001610433038548&thid\=OIP.Mf3e7b2cb9ce1b28ffdb653476265462do0&ajaxhist\=0
380=https\://www.bing.com/images/search?q\=creative+thinking+poster&view\=detailv2&&id\=88C4E451E271910346B665E929CF20B43152E8C2&selectedIndex\=110&ccid\=sXAxot2i&simid\=608041429056619330&thid\=OIP.Mb17031a2dda2cd9e16c9423b95c27b76o0&ajaxhist\=0
1259=ll\nhttps\://aws.amazon.com/route53/
1258=ll\nhttps\://spark.apache.org/
1257=ll\nhttps\://dwbi.org/database/sql/72-top-20-sql-interview-questions-with-answers
1256=ejb tuttorial
1255=ll\nhttp\://www.tutorialspoint.com/sql/sql_interview_questions.htm
1254=hibernate projection
1253=ll\nhttp\://www.mind-your-reality.com/law_of_attraction.html
1252=l\nhttps\://www.tutorialspoint.com/restful/restful_caching.htm
1251=sd sideshow
1250=ll\nhttp\://www.mkyong.com/jsf2/jsf-2-0-hello-world-example/
39=history
38=history 5
379=https\://www.bing.com/images/search?q\=creative+thinking+poster&view\=detailv2&&id\=1CC841D097FE22D10E8EB34DD64981125AC38F22&selectedIndex\=46&ccid\=0IYQoOWm&simid\=608010844594637416&thid\=OIP.Md08610a0e5a6362647a83804650f1d5aH0&ajaxhist\=0
37=history 5
378=https\://www.bing.com/images/search?q\=creative+thinking+poster&view\=detailv2&&id\=E936B5EA75DB4BCE8174DA8EA335685BEA187997&selectedIndex\=3&ccid\=1ab2rQJw&simid\=608011978473669322&thid\=OIP.Md5a6f6ad0270566ac9cf66e9b8705486o0&ajaxhist\=0
36=history 5
377=https\://www.bing.com/images/search?q\=creative+thinking&view\=detailv2&&id\=FC8ECA30B192B145158A060D188DD9E5532089E8&selectedIndex\=13&ccid\=tASK6Jvq&simid\=608001610423733443&thid\=OIP.Mb4048ae89beaf7de51a26381aac8ff4fo0&ajaxhist\=0
35=history 5
376=shazam\=http\://www.midomi.com
34=history 5
375=shazam 
33=history 5
374=shazam 
32=history
373=shazam
31=history 5
372=shazam\=www.midomi.com
30=history 5
371=Music fld 
370=solr tutorial Apache Solr Tutorial for Beginners 
1249=sd premiership
1248=l\nhttp\://thomasalspaugh.org/pub/fnd/ility.html
1247=ll\nhttps\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=4BB95726FB7E6F25E435B57625EC28AED7A25EF0&selectedIndex\=1&ccid\=x8lPVRn8&simid\=608023192666573330&thid\=OIP.Mc7c94f5519fcb9dbf3b642e0ce83ab76o0&ajaxhist\=0
1246=ll\nhttps\://www.bing.com/images/search?q\=spring+mvc+architecture&view\=detailv2&&id\=219CBF99257A948A0999A7FEED809C8674F8252D&selectedIndex\=2&ccid\=W5VgQVEd&simid\=608010127374158153&thid\=OIP.M5b956041511d270796ac5b0081ce8819o0&ajaxhist\=0
1245=ll\nhttps\://www.bing.com/images/search?q\=System+Engineering+Ilities&view\=detailv2&&id\=FC39C4B7292727DA5D7659DBDE3E4D5C28D4F225&selectedIndex\=1&ccid\=8cQ3yY%2bL&simid\=608020929212582538&thid\=OIP.Mf1c437c98f8bb1553153464bf4b07bddo0&ajaxhist\=0
1244=ll\nhttps\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=A8A2A1FD364452879E422E94EC40B3A3C6F9776D&selectedIndex\=19&ccid\=4FmKZEX8&simid\=607987527256376764&thid\=OIP.Me0598a6445fc72a85419ab93adfc28cdo0&ajaxhist\=0
1243=ll\nhttps\://www.bing.com/images/search?q\=ilities&view\=detailv2&&id\=91015B5F8BF17E2DE5881116F42A9A75B31498A9&selectedIndex\=0&ccid\=2M0rjgX0&simid\=607992840123583741&thid\=OIP.Md8cd2b8e05f4593005c9e4cca03c599eo0&ajaxhist\=0
1242=30\nhttps\://www.tutorialspoint.com/design_pattern/design_pattern_overview.htm
1241=333\nhttps\://www.tutorialspoint.com/struts_2/struts_ajax_tags.htm
1240=sd infidelity
29=history 5
28=history 5
369=solr 
27=history 5
368=solr fld 
26=history 5
367=Lava 
25=history 5
366=friends51 vidio 
24=history 5
365=friends51 
23=history 5
364=rushhour 
22=history 5
363=http\://www.columbia.edu/cu/biology/faculty/mowshowitz/explaining.html
21=history
362=http\://www.columbia.edu/cu/biology/faculty/mowshowitz/explaining.html
20=history 5
361=https\://www.bing.com/images/search?q\=how+to+explain&view\=detailv2&id\=D070D4902A964A967C991B01740F48B631FA7222&selectedindex\=2&ccid\=c%2FvYqdpL&simid\=608011317046021075&thid\=OIP.M73fbd8a9da4b5899ea84a28b468d8d3eo0&mode\=overlay&first\=1
360=https\://www.bing.com/images/search?q\=how+to+explain&view\=detailv2&id\=D070D4902A964A967C99D303E2E336B1F305B504&selectedindex\=3&ccid\=9p0CeSUA&simid\=608040402565729598&thid\=OIP.Mf69d027925002893d9a97ae99dcb7a1fo0&mode\=overlay&first\=1
1239=sd depraved
1238=sd despicable
1237=10\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
1236=3GI program
1235=high water mark
1234=php tutorial
1233=principles of Extreme Programming
1232=correctness and robustness of data 
1231=stateless business layer
1230=http\://www.mind-your-reality.com/mind_power.html
19=history 5
18=history 5
359=https\://www.bing.com/images/search?q\=how+to+explain+things&view\=detailv2&&id\=0096A7DFB2C472D01E9684B0D3915CF05345EC32&selectedIndex\=0&ccid\=g3xnzdlM&simid\=608053592403871002&thid\=OIP.M837c67cdd94cfe54c36f4bf793c0577ao0&ajaxhist\=0
17=history 5
358=https\://www.bing.com/images/search?q\=english+root+&view\=detailv2&&id\=729CC922F8005490945FBE03DF45499E75D16B4A&selectedIndex\=13&ccid\=l4EYiQPf&simid\=608022569855353632&thid\=OIP.M9781188903df022c9be792e3a6a9182co0&ajaxhist\=0
16=history 5
357=https\://www.bing.com/images/search?q\=connector+english&view\=detailv2&id\=F4BDCF74E318F3B51BEE7216FA7A81F906B98DF8&selectedindex\=3&ccid\=1t2wUjPm&simid\=608032667329891510&thid\=OIP.Md6ddb05233e6e259e1abdd68f0136b9eo0&mode\=overlay&first\=1
15=history 5
356=https\://www.bing.com/images/search?q\=english+prepositions&view\=detailv2&id\=B2D41D9AEB9B6042E0A28AB72158B8EADCE1448E&selectedindex\=9&ccid\=a7O7hiro&simid\=608015397261476707&thid\=OIP.M6bb3bb862ae80311e0a271a743dff601H0&mode\=overlay&first\=1
14=history 5
355=https\://www.bing.com/images/search?q\=english+prepositions&view\=detailv2&id\=7FE94913F5CDACEFFE872DF20ABFB602A1C679F6&selectedindex\=3&ccid\=NMlByfa%2B&simid\=608054438521209347&thid\=OIP.M34c941c9f6bee971b94df191381e4250o0&mode\=overlay&first\=1
13=history
354=https\://www.bing.com/images/search?q\=english+prepositions&view\=detailv2&&id\=910D9E67447A71BC4404D1CDDD140043869AED1F&selectedIndex\=0&ccid\=POoy2YuO&simid\=608037073971711725&thid\=OIP.M3cea32d98b8e5cec5456eed6ca5fcdbcH0&ajaxhist\=0
12=history
353=relationshiop\ntime \nplace \npeople\nprocess\n
11=history
352=http\://javabeat.net/spring-boot/
10=bi reverse iterate map
351=Rush hour 3 
350=https\://www.toptal.com/sql/interview-questions
1229=l\nhttps\://www.bing.com/images/search?q\=spring+mvc+architecture&view\=detailv2&&id\=A2C042BCFA2C0F3F653A42068B6537ABAC3D7254&selectedIndex\=3&ccid\=hs1uYm7A&simid\=608026534147917734&thid\=OIP.M86cd6e626ec0b6283db828f85a2b52dao0&ajaxhist\=0
1228=333\nhttp\://www.journaldev.com/3633/hibernate-interview-questions-and-answers\#hibernate-validator
1227=l\nhttps\://www.tutorialspoint.com/spring/spring_architecture.htm
1226=l\nhttps\://www.tutorialspoint.com/spring/spring_overview.htm
1225=l\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-beannameurlhandlermapping-example/
1224=30\nhttps\://www.tutorialspoint.com/maven/maven_overview.htm
1223=30\nhttps\://www.tutorialspoint.com/struts_2/struts_architecture.htm
1222=l\nhttps\://www.tutorialspoint.com/struts_2/struts_overview.htm
1221=why isn't array asupported in hibernate
1220=10\nC\:\\Users\\SiyuanZeng's\\Videos\\Study\\JAVA\\Effective Java\\Effective Java\\Effective Java PPT
349=gitdd add commit git push command 
348=Lego batman 
347=revealing\npattern\neverything\nthere\njumpinto\npeneetrate\nlight\n\ndark\nhide\nnohting\nonething\neverything black\nsearch hard
346=https\://en.wikipedia.org/wiki/List_of_computing_and_IT_abbreviations
345=https\://guides.github.com/activities/hello-world/
344=https\://www.atlassian.com/git/tutorials/
343=https\://www.atlassian.com/git/tutorials/advanced-overview
342=http\://www.learnpython.org/
341=http\://www.smosh.com/smosh-pit/articles/18-types-of-internet-trolls
340=emacs cheet sheet\=http\://www.rgrjr.com/emacs/emacs_cheat.html
1219=10\nC\:\\Users\\SiyuanZeng's\\Videos\\Study\\JAVA\\Effective Java\\Effective Java\\Effective Java PPT
1218=5\nC\:\\Users\\SiyuanZeng's\\Downloads\\Effective Java 2nd Edition \u82F1\u6587\u7248.pdf\n
1217=15\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
1216=333\nhttp\://www.mind-your-reality.com/universal_mind.html
1215=111\nhttps\://www.tutorialspoint.com/software_engineering/software_design_strategies.htm
1214=DDL VS DML
1213=sd eviction
1212=rest and restful
1211=jsf vs struts vs tapestry
1210=mean stack vs  j2ee
339=https\://simpleprogrammer.com/2012/12/09/the-4-most-important-skills-for-a-software-developer/
338=https\://www.entrepreneur.com/article/240644
337=http\://www.criticalthinking.org/resources/resourcesImages/posters/poster_IntTraitsBIG.jpg
699=l\nhttp\://www.scala-lang.org/documentation/getting-started.html
336=rushhour 
698=l\nhttp\://www.tutorialspoint.com/apache_kafka/index.htm
335=http\://lekhaknawraj.blogspot.com/2016/04/network-security-interview-questions.html
697=l\nhttp\://blog.flux7.com/blogs/docker/docker-tutorial-series-part-1-an-introduction
334=http\://www.interviewquestions365.com/2011/02/18/network-admin-interview-questions-and-answers/
696=https\://ianmellis.com/2013/02/26/good-programming-vs-bad-programming/
333=http\://resources.intenseschool.com/network-engineer-network-administrator-security/
695=120\nhttp\://www.oodesign.com/
332=teeel them what they want instead of ywhat you know or what you is actually happening
694=120\nhttp\://www.thetoptens.com/best-insults/
331=why am i feel so uncomfirtable that i will be lying? because i dfound why am i so afraid of lying because lying is wrong nad people will leave you and not talking with you any more. people always saying that lying is wrong.
693=http\://sixrevisions.com/web-development/git-tips/
330=rushhour 
692=clean code
691=ejb
690=l\nhttps\://www.quora.com/What-are-some-cool-things-that-you-can-do-with-Java
1209=30\nhttp\://www.testingbrain.com/interview/oracle-interview-questions.html/4
1208=struts vs spring
1207=x\nhttp\://www.dictionary.com/browse/kinesthetics?s\=t
1206=sd stoked
1205=sd derivative
1204=sd brittle
1203=sd zesty
1202=sd impetuous
1201=sd aggravate
1200=sd alpaca
329=read conciously and purposely like the the middle and like the one because i have to use finger then i can use my mind as nabviagatier and remember it that is ti t 
328=wstart with why i f you know the significance they you will remember that is t is 
327=\rYES GOOGLE\n Dufgt \r\n\r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n5) What have you always wanted? Did you ever get it?\r\n
689=l\nhttps\://www.mapr.com/products/mapr-sandbox-hadoop/tutorials/spark-tutorial
326=https\://www.bing.com/images/search?q\=apache+kafka&view\=detailv2&&id\=6BA651D40D04E7D0C09E8EBD7488DA23089C5668&selectedIndex\=24&ccid\=rMp0lnqH&simid\=608051127089040434&thid\=OIP.Macca74967a8737d8ef7182ee4f026ceeo0&ajaxhist\=0
688=l\nhttp\://www.tutorialspoint.com/apache_spark/
325=http\://www.criticalthinking.org/resources/resourcesImages/posters/posterTraitsStandardsBIG.jpg
687=l\nhttp\://www.tutorialspoint.com/hive/
324=http\://java-developers-space.blogspot.in/2014/08/java-j2ee-interview-questions-for.html
686=l\nhttps\://www.dezyre.com/hadoop-tutorial/apache-hive-tutorial-tables
323=http\://java-developers-space.blogspot.com/2013/08/struts-to-spring-migration.html
685=just ask one question repeately
322=get started with mean stack\=https\://hackhands.com/how-to-get-started-on-the-mean-stack/
684=sd Theorem
321=http\://www.tutorialspoint.com/nodejs/
683=sd hideous
320=set up mean stack \=https\://scotch.io/tutorials/setting-up-a-mean-stack-single-page-application
682=sd arsenal
681=sd rile
680=sd sheer
319=Rush hour 2 
318=http\://vschart.com/compare/angularjs/vs/node-js
317=friends51 
679=sd vile
316=Rush hour 2 
678=l\nhttp\://www.mkyong.com/tutorials/spring-tutorials/
315=music
677=l\nhttp\://www.javatpoint.com/spring-tutorial
314=rushhour 
676=l\nhttps\://dwbi.org/database/sql/72-top-20-sql-interview-questions-with-answers
313=everybody is revealing some secreate to tme would you liek to know a secrete cops?
675=l\nhttp\://www.mkyong.com/tutorials/jax-rs-tutorials/\n
312=bi ClassNotFoundException\: com.mycompany.logproducer.SimplePartitioner
674=l\nhttp\://www.tutorialspoint.com/restful/restful_jax_rs.htm
311=https\://en.wikipedia.org/wiki/Most_common_words_in_English
673=sd lucid
310=https\://resources.jetbrains.com/assets/products/intellij-idea/IntelliJIDEA_ReferenceCard.pdf
672=sg lucid
671=a
670=friends51 vidio 
309=Intellij shortcut 
308=ehwllo
307=kafka set up and running kafka on windows\=https\://dzone.com/articles/running-apache-kafka-on-windows-os
669=friends 123
306=C\:\\kafka_2.11-0.9.0.0\\config
668=http\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/GettingStarted.Download.html
305=https\://dzone.com/articles/running-apache-kafka-on-windows-os
667=http\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/dynamolocal-vs-dynamoservice.html
304=ij see the connection myself only me see the connection and other people don't evn know
666=a
303=i know what you want that is it you want this answer and that answer you want some answers
665=http\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/intro-dynamodb-local.html
302=https\://microsoftedgetips.microsoft.com/en-us?source\=f1
664=http\://www.fluentu.com/english/blog/american-english-slang-words-esl/
301=the interview is not about who you know but about the understanding you have that is it they want somebody who understand that what thehy like not necessary what you are or what you are not people liek through it but to meet their excpectation that is the thing
663=software design how to design software?
300=che and find the connect ion and bridge them together and they are alike lie that i lie about the terms and things what i have understand
662=what does a good java programmer need to learn design pattern algorithm datastructure ?
661=l\nhttp\://www.javatpoint.com/hibernate-interview-questions
660=why do you always talk bout others in say it in you r conversion like they exist whey?
659=i don't care about other sna dn i only care aobut myself and why should i care about other when i am not understanding myself and why myself mi am myself thourhg me the love goes to everybody when i am careabout about thereother i am actually careabing about myself the inner feelings about myself and that drives me around and help others somethigmet it kills me i d if i don't do thwat i intent to do what i am boring to do
658=l\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
657=sd pumpered
656=will cassandra override the record when saving the object with same id?
655=What is difference between abstraction and encapsulation?
654=Explain OOPS concepts with example
653=http\://www.vogella.com/tutorials/JavaDateTimeAPI/article.html
652=http\://stackoverflow.com/questions/19154310/increase-large-java-application-performance
651=l\nhttp\://www.cubrid.org/blog/dev-platform/the-principles-of-java-application-performance-tuning/
650=sg pampered
649=l\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
648=how to profile a application?
647=what is application profile?
646=l\nhttps\://coderanch.com/t/203125/java/improve-performance-Swing-application
645=l\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
644=l\nhttp\://www.techrepublic.com/blog/five-apps/five-tips-for-improving-application-performance-management/
643=l\nhttps\://msdn.microsoft.com/en-us/library/ff649152.aspx
642=how to improve application performance java?
641=how to improve application performance?
640=rush hour 123\=http\://123movies.is/film/rush-hour-2290/
639=Freinds 123\=http\://123movies.is/film/friends-season-5-2630/watching.html
638=123 movies 
637=siyuanzeng
999=222\nhttp\://www.wikihow.com/Reverse-the-String-in-Java
636=siyuanzeng
998=sd visceral
635=siyuanzeng
997=sd defuse
634=siyuanzeng
996=222\nhttp\://stackoverflow.com/questions/3035601/performance-profiler-for-a-java-application
633=sg do i hav eto catch exception
995=String.intern() 
632=sg how to kill a thread
994=What is difference between String, StringBuffer and StingBuilder
631=java 8 concurrency 
993=Explain System.out.println() in detail\u00A0\u00A0\u00A0 \u00A0
630=l\nhttps\://www.vidarholen.net/contents/interjections/
992=java gabager collerctor
991=Can we overload the static method
990=Can we override static method
629=l\nhttp\://www.slideshare.net/koolhits/java-performance-threading-and-concurrent-data-structures
628=http\://lucid.wikia.com/wiki/Differences_between_the_real_world_and_the_dream_world
627=http\://threeillusions.com/what-is-the-difference-between-dreams-and-reality/
989=What is difference between abstract class and Interface
626=l\nhttp\://www.functionaljava.org/examples-java8.html
988=OOPS concepts with example
625=drupal
987=sd groan
624=http\://www.sidereel.com/tv-shows/friends/season-5/episode-1
986=java delegation 
623=http\://putlockers.ch/watch-friends-tvshow-season-5-episode-1-online-free-putlocker.html
985=sd epoxy
622=http\://www.livesinabox.com/friends/season5/501arsr.htm
984=100\nhttp\://www.short-funny.com/funniest-jokes-3.php
621=friends season 5 episode 1 transcript 
983=222\nhttp\://howtodoinjava.com/core-java/collections/popular-hashmap-and-concurrenthashmap-interview-questions/
620=what is system.out.print();
982=how ot prioritize requirements
981=techniques for specifying requirements
980=222\nhttp\://javarevisited.blogspot.com/2011/09/invokeandwait-invokelater-swing-example.html
619=l\nhttps\://www.learnpython.org/
618=friends51 vidio 
617=friends51 
979=222\nhttps\://www.tutorialspoint.com/spring/index.htm
616=what is rauby on rails?
978=222\nhttps\://www.tutorialspoint.com/spring/spring_overview.htm
615=http\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/quick-intro.html
977=123\nhttps\://www.tutorialspoint.com/nodejs/nodejs_event_emitter.htm
614=http\://www.vogella.com/tutorials/JavaPreferences/article.html
976=300\nhttp\://www.lifehack.org/399140/how-to-remember-90-of-everything-you-learn
613=l\nhttp\://www.vogella.com/tutorials/Logging/article.html
975=sd divvy
612=l\nhttp\://www.vogella.com/tutorials/JavaConcurrency/article.html
974=sd festoon
611=l\nhttp\://www.vogella.com/tutorials/REST/article.html
973=sd wreath
610=l\nhttp\://www.vogella.com/tutorials/JavaCollections/article.html
972=sd strand
971=sd impertinent
970=250\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-parameterizableviewcontroller-example/
609=l\nhttp\://www.vogella.com/tutorials/JavaAnnotations/article.html
608=l\nhttp\://www.vogella.com/tutorials/JavaDateTimeAPI/article.html
607=http\://www.vogella.com/tutorials/JavaRegularExpressions/article.html
969=250\nhttps\://intellipaat.com/tutorial/scala-tutorial/hello-program-in-scala/
606=http\://www.tutorialspoint.com/hibernate/
968=250\nhttps\://www.tutorialspoint.com/spring/spring_bean_life_cycle.htm
605=http\://www.tutorialspoint.com/struts_2/
967=250\nhttps\://intellipaat.com/tutorial/scala-tutorial/scala-installation/
604=http\://www.mkyong.com/tutorials/spring-mvc-tutorials/
966=250\nhttps\://www.tutorialspoint.com/nodejs/nodejs_introduction.htm
603=http\://www.w3schools.com/jquery/
965=sd booze
602=l\nhttp\://www.tutorialspoint.com/ruby-on-rails/
964=SD booze
601=l\nhttps\://docs.oracle.com/javase/tutorial/uiswing/layout/visual.html
963=200\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-parameterizableviewcontroller-example/
600=pretend to be sad adn happy
962=200\nhttps\://www.tutorialspoint.com/struts_2/basic_mvc_architecture.htm
961=200\nhttps\://www.tutorialspoint.com/hibernate/hibernate_overview.htm
960=200\nhttps\://www.tutorialspoint.com/hibernate/orm_overview.htm
959=200\nhttp\://www.mkyong.com/spring-mvc/gradle-spring-4-mvc-hello-world-example-annotation/
958=200\nhttps\://www.tutorialspoint.com/struts_2/basic_mvc_architecture.htm
957=200\nhttps\://www.tutorialspoint.com/hibernate/orm_overview.htm
956=200\nhttps\://www.tutorialspoint.com/maven/maven_overview.htm
955=sprkSQL
954=sparkR
953=graphX
952=250\nhttp\://www.journaldev.com/1696/exception-handling-in-java
951=sd serendipity
950=sd crunch
949=sd denounciation
948=archive data
947=sd Kinesthetics
946=sd spin off
945=200\nhttps\://facebook.github.io/react/
944=200\nhttp\://blog.cloudera.com/blog/2014/07/apache-hive-on-apache-spark-motivations-and-design-principles/
943=sd outrageous
942=sd divergent
941=sd convergent
940=sd stupor
939=200\nhttp\://resources.intenseschool.com/network-engineer-network-administrator-security/
938=160\nhttp\://www.interviewquestions365.com/2011/02/18/network-admin-interview-questions-and-answers/
937=100\nhttp\://lekhaknawraj.blogspot.com/2016/04/network-security-interview-questions.html
936=sd epoxy
935=paradigm
934=60\nhttp\://www.short-funny.com/funniest-jokes-3.php
933=sd garland
932=sd gratuity
931=sd diminutive
930=sd diminutive
929=sd corona
928=diminutive
927=gratuity
926=15\ngarland
925=14\nhttps\://www.tutorialspoint.com/design_pattern/chain_of_responsibility_pattern.htm
924=sd berated
923=sd tirade
922=140\nhttps\://www.tutorialspoint.com/struts_2/struts_examples.htm
921=150\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-hello-world-annotation-example/
920=15\nhttps\://blog.risingstack.com/the-react-way-getting-started-tutorial/
919=15\nhttps\://codegeekz.com/react-js-tutorial/
918=15\nhttps\://scotch.io/tutorials/learning-react-getting-started-and-concepts
917=15\nhttps\://scotch.io/tutorials/learning-react-getting-started-and-concepts
916=15\nhttps\://blog.risingstack.com/the-react-way-getting-started-tutorial/
915=log4j hello world\=http\://www.mkyong.com/logging/log4j-hello-world-example/
914=log4j hello world\=https\://www.tutorialspoint.com/struts_2/struts_interceptors.htm
913=130\nhttps\://www.tutorialspoint.com/struts_2/struts_interceptors.htm
912=140\nhttps\://www.tutorialspoint.com/hibernate/hibernate_mapping_files.htm
911=130\nhttp\://blog.csdn.net/huangfan322/article/details/46234695
910=sd mandrill
909=http\://www.bing.com/images/search?q\=prejudice&view\=detailv2&&id\=DA03EC823D59B19294DE7815E97892758279D60C&selectedIndex\=11&ccid\=NE5ZE4NL&simid\=608052145033053498&thid\=OIP.M344e5913834b6fa3b71d46202c41cfc7o0&ajaxhist\=0
908=l\nhttp\://www.functionaljava.org/examples-java8.html
907=why itis calle d callback method call back function?
906=l\nhttps\://docs.oracle.com/javase/tutorial/java/generics/types.html
905=30\nhttps\://docs.oracle.com/javase/tutorial/java/generics/why.html
904=l\nhttps\://docs.oracle.com/javase/tutorial/java/generics/
903=how to reverse a string
902=When do you use an abstract class and when do you use an interface
901=When do you use an abstract class and when do you use an interface - See more at\: http\://noop.nl/2009/01/100-interview-questions-for-software-developers.html\#sthash.crkuR1cy.dpuf
900=differences between object-oriented design and component-based design
1199=x\nhttp\://www.w3schools.com/jquery/
1198=sd dope
1197=sd shibby
1196=sd accustomed
1195=sd haughty
1194=sd contemptuous
1193=111\nhttps\://www.tutorialspoint.com/maven/maven_build_profiles.htm
1192=l\nC\:\\Users\\SiyuanZeng's\\Desktop\\Java_8_in_Action.pdf
1191=111\nhttp\://www.bing.com/images/search?q\=prejudice&view\=detailv2&&id\=34B3F692AF5C6EFD9D6809E3817CAE41D2005F18&selectedIndex\=145&ccid\=b7Je97n6&simid\=608028896379538447&thid\=OIP.M6fb25ef7b9faba3a7f650139c4a09a35o0&ajaxhist\=0
1190=111\nhttp\://www.buggybread.com/2014/05/interview-questions-and-answers-on-maven.html
1189=333\nhttp\://javarevisited.blogspot.com/2011/11/struts-interview-questions-answer-j2ee.html
1188=333\nhttps\://www.tutorialspoint.com/hibernate/hibernate_mapping_types.htm
1187=333\nhttps\://www.tutorialspoint.com/hibernate/hibernate_mapping_files.htm
1186=333\nhttp\://www.developersbook.com/struts/interview-questions/struts-interview-questions-faqs.php
1185=333\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-beannameurlhandlermapping-example/
1184=sd wedgy
1183=sd gait
1182=sd sag
1181=333\nhttp\://www.w3schools.com/jquery/jquery_hide_show.asp
1180=l\nhttps\://www.scribd.com/doc/72077969/Maven-Interview-Questions
1179=l\nhttp\://www.testingbrain.com/interview/oracle-interview-questions.html/3
1178=111\nhttps\://docs.oracle.com/javase/tutorial/uiswing/components/combobox.html
1177=sd signpost
1176=111\nhttps\://www.bing.com/images/search?q\=connector+english&view\=detailv2&&id\=5F0FEB161A1285854560CAF6550DFAAB8B731DF2&selectedIndex\=47&ccid\=smevsm2l&simid\=608003599027341812&thid\=OIP.Mb267afb26da5a2bb323a2436e589de45o0&ajaxhist\=0
1175=111\nhttps\://www.bing.com/images/search?q\=connector+english&view\=detailv2&&id\=D25EB27537FBB0E0B6B11955161DD4083AA6FAE7&selectedIndex\=49&ccid\=kaorbbhF&simid\=608041472045680843&thid\=OIP.M91aa2b6db845ff00f2573ced61a7a5b2o0&ajaxhist\=0
1174=111\nhttps\://www.tutorialspoint.com/nodejs/nodejs_introduction.htm
1173=111\nhttps\://www.tutorialspoint.com/design_pattern/design_pattern_overview.htm
1172=sd weary
1171=l\nhttp\://www.dotnetfunda.com/interviews/cat/45/design-pattern-practices
1170=111\nhttp\://www.w3schools.com/jquery/jquery_intro.asp
299=Rush hour 3 
298=rushhour 
297=if i change all nouns to everything then i will be come so smart instead of stupid
296=noun\nwhy \ni need to know why behind it and that is all i need to know\nwhat and why\n\nhow to know whyu\nwhat does it give you everything gives you everything
295=http\://www.wikihow.com/Be-Funny
294=https\://msdn.microsoft.com/en-us/library/ee658124.aspx
293=https\://en.wikipedia.org/wiki/GRASP_(object-oriented_design)
292=https\://en.wikipedia.org/wiki/SOLID_(object-oriented_design)
291=http\://www.criticalthinking.org/resources/resourcesImages/posters/posterStandardsBIG.jpg
290=http\://diply.com/interesting-things/20-conversations-with-siri-that-are-absolutely-hilarious/32849/3
1169=222\nhttp\://stackoverflow.com/questions/3085285/cohesion-coupling
1168=222\nhttps\://www.tutorialspoint.com/hibernate/hibernate_environment.htm
1167=222\nhttp\://stackoverflow.com/questions/28918004/readwritelock-vs-stampedlock
1166=222\nhttp\://stackoverflow.com/questions/28918004/readwritelock-vs-stampedlockhttp\://stackoverflow.com/questions/28918004/readwritelock-vs-stampedlock
1165=222\nhttps\://www.tutorialspoint.com/hibernate/hibernate_architecture.htm
1164=222\nhttps\://www.tutorialspoint.com/hibernate/hibernate_overview.htm
1163=222\nhttps\://www.tutorialspoint.com/hibernate/orm_overview.htm
1162=222\nhttp\://www.techoism.com/apache-solr-interview-questions/
1161=222\nhttp\://career.guru99.com/top-23-cassandra-interview-questions/
1160=222\nhttps\://thecloudview.wordpress.com/2015/04/29/cassandra-real-interview-questions-and-answers/
289=\rspache spark user cases\=http\://hortonworks.com/apache/spark/\#section_2
288=apache sarpk tutorila user\=\=http\://hortonworks.com/apache/spark/\#section_2
287=\rideas and possibilities\n ufgt \r\n\r\nGood Morning C1 world, Fri, Sep 9, 2016 at 10\:29 am\r\nin the end there is nothing in the beginning therei s nothing how ot process all yt eh ieas as so possible and because there are so many ideas there \r\n\r\n\r\n
286=ache spark user cases\=http\://hortonworks.com/apache/spark/\#section_2
285=Lego batman 
284=music
283=getting started with mongodb\=https\://code.tutsplus.com/tutorials/getting-started-with-mongodb-part-1--net-22879
282=mv bson
281=mongodb tutorial\=http\://www.mkyong.com/tutorials/java-mongodb-tutorials/
280=elasticsearch\=http\://localhost\:9200/_plugin/head/
1159=222\nhttps\://www.edureka.co/blog/interview-questions/cassandra-interview-questions/
1158=222\nhttps\://intellipaat.com/interview-question/apache-solr-interview-questions/
1157=222\nhttps\://www.quora.com/What-are-the-question-asked-in-apache-solr-interview
1156=222\nhttp\://tekslate.com/solr-interview-questions/
1155=222\nhttp\://www.kerneltraining.com/top-10-apache-solr-interviews-questions-answers/\n
1154=222\nhttp\://stackoverflow.com/questions/tagged/solr
1153=123\nhttp\://stackoverflow.com/questions/tagged/solr
1152=111\nhttp\://java-questions.com/keyConcepts-interview-questions-1.html
1151=333\nhttp\://stackoverflow.com/questions/6679376/add-field-in-solr-schema-xml
1150=222\nhttp\://www.guru99.com/cassandra-tutorial.html\#1
279=rushhour 
278=music
277=http\://lifehacker.com/what-i-wish-i-knew-when-i-started-my-career-as-a-softwa-1681002791
276=http\://lifehacker.com/what-i-wish-i-knew-when-i-started-my-career-as-a-softwa-1681002791
275=blockingqueuee and you\=http\://www.javalobby.org/java/forums/t16278.html
274=http\://blog.takipi.com/the-top-100-java-libraries-in-2016-after-analyzing-47251-dependencies/
273=http\://blog.takipi.com/the-top-100-java-libraries-in-2016-after-analyzing-47251-dependencies/
272=top 100 java libraries java developers should know must know 
271=http\://zeroturnaround.com/wp-content/uploads/2016/05/Java-8-Streams-cheat-sheet-by-RebelLabs.png
270=Java 8 stream cheat sheet 
1149=333\nhttps\://www.bing.com/images/search?q\=mongodb+vs+cassandra&view\=detailv2&&id\=9111D15699865D58061FA517299B2773C333791A&selectedIndex\=1&ccid\=ZaUDq%2bnt&simid\=608022690157954986&thid\=OIP.M65a503abe9ed873652d377dc8915d313o0&ajaxhist\=0
1148=222\nhttp\://www.bigdataanalyst.in/spark-interview-questions/
1147=33\nhttp\://www.codeodor.com/index.cfm/2009/1/29/Answering-the-100-Interview-Questions-for-Software-Developers-Functional-Design/2705
1146=https\://en.wikipedia.org/wiki/Relativism
1145=333\nhttp\://www.tutorialspoint.com/jsf/
1144=http\://www.bing.com/images/search?q\=common+relationships+between+things&view\=detailv2&&id\=D044B2B8B7338236D9B2A825B36627EEC3DA8DEC&selectedIndex\=56&ccid\=75U%2fsS3e&simid\=608031116878612298&thid\=OIP.Mef953fb12dde9f36265a3e4c2c31818fH0&ajaxhist\=0
1143=222\nhttp\://www.w3schools.com/php/
1142=http\://www.greaterreality.com/notime.htm
1141=333\nhttp\://www.oodesign.com/
1140=http\://www.greaterreality.com/nodeath.htm
269=In the Stone Age \nUp to this point, the production/consumption model had to be performed using the low-level Object.wait() , Object.notify() constructs which essentially provides a way for one thread to notify another thread that it is done doing some work. Code using wait/notify is usually ugly, and unintuitive, so I'd rather not spend time explaining it... instead you can see some examples here\: http\://java.sun.com/docs/books/tutorial/essential/threads/waitAndNotify.html \n
268=Stitches 
267=Rush hour 2 
266=c1comehere fld 
265=onenote 
264=onenote 
263=onetoone fld 
262=solr tutorial Apache Solr Tutorial for Beginners\=https\://examples.javacodegeeks.com/enterprise-java/apache-solr/apache-solr-tutorial-beginners/
261=Solr+Hadoop Big Data Love\=https\://dzone.com/articles/solr-hadoop-big-data-love
260=Solr + Hadoop Big Data Love\=https\://dzone.com/articles/solr-hadoop-big-data-love
1139=333\nhttps\://spec2000.net/06-basicphysics.htm
1138=333\nhttp\://physics.about.com/od/physics101thebasics/p/PhysicsLaws.htm
1137=111\nhttps\://gradle.org/getting-started-gradle-java/
1136=111\nhttp\://www.tutorialspoint.com/perl/
1135=333\nhttps\://www.tutorialspoint.com/hibernate/hibernate_architecture.htm
1134=33\nhttp\://www.cloudsopedia.com/interviewquestions/j2ee/j2ee-jms.php
1133=30\nhttp\://javabeat.net/jms-interview-questions/
1132=444\nhttps\://www.quora.com/What-is-reactive-programming
1131=333\nhttp\://www.kennybastani.com/2015/07/spring-cloud-docker-microservices.html
1130=333\nhttp\://www.kennybastani.com/2015/07/spring-cloud-docker-microservices.html
259=solr 
258=solr start 
257=http\://stackoverflow.com/questions/16820336/what-is-saas-paas-and-iaas-with-examples
256=http\://www.aosabook.org/en/distsys.html
255=http\://www.theserverside.com/news/1363681/Scaling-Your-Java-EE-Applications
254=http\://www.fromdev.com/2013/07/architect-interview-questions-and-answers.html
253=bi high performance scalable enterprise solutions java web application 
252=bi high performance scalable enterprise solutions java web application 
251=bi high performance scalable enterprise solutions java
250=Rush hour 3 
1129=15\nhttp\://www.slideshare.net/doanduyhai/cassandra-for-the-ops-dos-and-donts
1128=StampedLock
1127=http\://stackoverflow.com/questions/4055736/what-is-a-smoke-test
1126=https\://en.wikipedia.org/wiki/Smoke_testing_(software)
1125=30\nhttp\://docs.datastax.com/en/glossary/doc/glossary/gloss_node.html
1124=model user authorization, user profiles and permissions in a database
1123=sd slouch
1122=manage conflicts in a web application when different people are editing the same data?
1121=example of low coupling and high cohesion
1120=sd relativism
249=http\://thumbpress.com/20-mind-blowing-facts-you-probably-didnt-know/
248=http\://blog.teamtreehouse.com/what-makes-a-great-programmer
247=http\://blog.teamtreehouse.com/what-makes-a-great-programmer
246=https\://resources.jetbrains.com/assets/products/intellij-idea/IntelliJIDEA_ReferenceCard.pdf
245=Intellij shortcut 
244=http\://www.rgrjr.com/emacs/emacs_cheat.html
243=https\://spin.atomicobject.com/2016/04/19/vim-commands-cheat-sheet/
242=http\://career.guru99.com/top-100-networking-interview-questions-answers/
241=http\://career.guru99.com/shell-scripting-interview-questions/
240=http\://career.guru99.com/top-25-microsoft-excel-interview-questions/
1119=relativism
1118=111\nhttp\://www.developersbook.com/spring/interview-questions/spring-interview-questions-faqs.php
1117=111\nhttp\://www.developersbook.com/spring/interview-questions/spring-interview-questions-faqs.php
1116=111\nhttp\://howtodoinjava.com/spring/spring-mvc/spring-mvc-interview-questions-with-answers/
1115=333\nhttp\://www.techrepublic.com/blog/10-things/10-techniques-for-gathering-requirements/
1114=120\nhttps\://www.codeproject.com/Articles/22769/Introduction-to-Object-Oriented-Programming-Concep
1113=333\nhttp\://stackoverflow.com/questions/6742789/how-to-handle-memory-leaks-in-java-ee
1112=333\nhttp\://www.javatpoint.com/hibernate-interview-questions
1111=222\nhttp\://career.guru99.com/top-25-interview-questions-on-scala/
1110=222\nhttps\://cwiki.apache.org/confluence/display/solr/Apache+Solr+Reference+Guide
239=http\://career.guru99.com/top-35-seo-interview-questions/
238=http\://career.guru99.com/top-50-linux-interview-questions/
237=https\://blog.jetbrains.com/idea/2015/10/intellij-idea-tips-and-tricks/
599=is there something i don't know after reading so many times i really wan t osemthing i don't know 
236=http\://www.programcreek.com/2011/08/the-most-widely-used-java-apis/
598=l\nhttps\://www.edureka.co/blog/interview-questions/top-apache-kafka-interview-questions-for-beginners/
235=http\://career.guru99.com/top-16-tomcat-interview-questions/
597=sd lucid
234=http\://www.tutorialspoint.com/maven/maven_interview_questions.htm
596=http\://www.journaldev.com/146/hashmap-implementation-with-list-in-java
233=http\://career.guru99.com/top-25-interview-questions-for-game-developer/
595=360\nhttp\://www.learnpython.org/en/Conditions
232=https\://www.toptal.com/ios/interview-questions
594=60\nhttp\://www.learnpython.org/en/Conditions
231=http\://www.seleniumguide.com/
593=to read \nthe mos the purpose and you will ce\n\nlove is hte \nlove is acti verb
230=http\://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important
592=to understand others to find theire point of videw and that is thwy we dig in \nyuo don't want to knwo the qthing s \nif you think so \npeople want to validate the things they eneed and that i swhy \nyou don't know that it is \nsomething you don't want to say but you say it then it is againest the will but you have to be transparent\n\n
591=i don't acare i don't want ta job so i can say what ever i want and don't ecare about the result just say what you want without fearing the results\nif people really knotice you are a bad guy then it is thery time to take action 
590=60\nhttps\://msdn.microsoft.com/en-us/library/ee658124.aspx
1109=222\nhttp\://solr-vs-elasticsearch.com/
1108=http\://www.bing.com/images/search?q\=divergent+thinking&view\=detailv2&&id\=9AF26BA85CBE301DDF5ECCD131B5D1AE9AD2B219&selectedIndex\=1&ccid\=1lHiLLst&simid\=608043293109783531&thid\=OIP.Md651e22cbb2de1d93316c0e9d754c5c2o0&ajaxhist\=0
1107=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=4AC49DEBAE7AC58FEA39ED9C128515F57C996EDB&selectedIndex\=38&ccid\=xL7MX%2bmR&simid\=608013859697921108&thid\=OIP.Mc4becc5fe9913b013d55bf6f6b974262o0&ajaxhist\=0
1106=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=DF89355AA42A4DC0316FEB227419B0635FFA3FF5&selectedIndex\=11&ccid\=%2fOO7ILHj&simid\=608042751942002154&thid\=OIP.Mfce3bb20b1e32f6d5f217bfd69e79cc9o0&ajaxhist\=0
1105=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=FA03EB3FC552C29D52C573AFA8060BF3BAD33E06&selectedIndex\=35&ccid\=g3gC8l8c&simid\=608044018963516148&thid\=OIP.M837802f25f1cf37a9b9a1a5156d0f742o0&ajaxhist\=0
1104=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=304DD047C631BD28293A10B9DD7686FBC782B126&selectedIndex\=164&ccid\=ewkDAMUt&simid\=608024227746940177&thid\=OIP.M7b090300c52da70a2f62af83a1d6f290o0&ajaxhist\=0
1103=http\://www.bing.com/images/search?q\=convergent+thinking+vs+divergent+thinking&view\=detailv2&&id\=C82DD4585655229A4124E13288816FB39915C71D&selectedIndex\=258&ccid\=6NRP8RDC&simid\=608021388779326434&thid\=OIP.Me8d44ff110c25b5e53a021bc47963dceo0&ajaxhist\=0
1102=http\://www.lifehack.org/469096/8-signs-of-fake-nice-people-you-need-to-be-aware-of
1101=111\nhttp\://java-questions.com/keyConcepts-interview-questions-1.html
1100=222\nhttp\://stackoverflow.com/questions/tagged/solr
229=si blolt
228=sd bolt
227=https\://www.bing.com/images/search?q\=mastery&view\=detailv2&id\=26E6CA6064FEA9C974EC01BFAA2EF4F7BC148F0C&selectedindex\=14&ccid\=7gVCKHVc&simid\=607997371280458346&thid\=OIP.Mee054228755c92668e7f0788f88c8081o0&mode\=overlay&first\=1
589=120\nhttps\://en.wikipedia.org/wiki/SOLID_(object-oriented_design)
226=https\://www.bing.com/images/search?q\=mastery&view\=detailv2&&id\=E40B66EA017ED040859FB6BC16DA21BD6A21ECBD&selectedIndex\=0&ccid\=DPoCxpiM&simid\=608002778646252203&thid\=OIP.M0cfa02c6988c0fa26aff8db37f6521b0H0&ajaxhist\=0
588=120\nhttps\://en.wikipedia.org/wiki/GRASP_(object-oriented_design)
225=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=E9D259A9CDB1348F492992AB404386BDAA8C6A06&selectedindex\=96&ccid\=dL8B%2BmE7&simid\=608007490222360775&thid\=OIP.M74bf01fa613b7531690e9bd50f35b25bH0&mode\=overlay&first\=1
587=l\nhttp\://www.short-funny.com/funniest-jokes-2.php
224=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=745ADA47C330C95D9725CE0A37A2CE70648CE5E1&selectedindex\=62&ccid\=GtQIV8Em&simid\=608018901954724195&thid\=OIP.M1ad40857c12608cb26286cc523bab28aH0&mode\=overlay&first\=1
586=l\nhttps\://intellipaat.com/tutorial/scala-tutorial/
223=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=948AC5A61F176E3B691B2B9A9A323F3A6306AD50&selectedindex\=10&ccid\=oRNtaLF%2B&simid\=608054408449755951&thid\=OIP.Ma1136d68b17edf6e2f743c3c628fd70fo0&mode\=overlay&first\=1
585=l\nhttp\://www.fromdev.com/2013/07/architect-interview-questions-and-answers.html
222=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=81CE9BAE9AE1E751F1F24A0257A4BD40DA81A711&selectedindex\=9&ccid\=yvrrlkzS&simid\=608045500683650954&thid\=OIP.Mcafaeb964cd2db595bf932a69010f3bdo0&mode\=overlay&first\=1
584=l\nhttp\://career.guru99.com/shell-scripting-interview-questions/
221=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&id\=02B5D9756FB28C7278499AF5E58CB20988925A4A&selectedindex\=1&ccid\=HoDoPdGe&simid\=608005690637682753&thid\=OIP.M1e80e83dd19e250bfd54864b57fd4be1H0&mode\=overlay&first\=1
583=l\nhttp\://career.guru99.com/top-100-networking-interview-questions-answers/
220=https\://www.bing.com/images/search?q\=leves+expert+master&view\=detailv2&&id\=948AC5A61F176E3B691B9ADD3AE1D78984AE943C&selectedIndex\=0&ccid\=gqltI97j&simid\=608019954222039523&thid\=OIP.M82a96d23dee3fc8e763143bfa487ccbbo0&ajaxhist\=0
582=l\nhttp\://www.journaldev.com/3633/hibernate-interview-questions-and-answers
581=l\nhttp\://docs.aws.amazon.com/ElasticMapReduce/latest/ManagementGuide/emr-gs.html
580=http\://howtodoinjava.com/java-8/java-8-tutorial-internal-vs-external-iteration/
219=https\://en.wikipedia.org/wiki/AFI%27s_100_Years...100_Movie_Quotes
218=http\://www.finestquotes.com/select_quote-category-Zen-page-0.htm
217=http\://www.oodesign.com/
579=http\://docs.aws.amazon.com/AmazonS3/latest/gsg/GetStartedWithS3.html
216=Rush hour 2
578=l\nhttp\://docs.aws.amazon.com/amazondynamodb/latest/gettingstartedguide/Welcome.html
215=Rush hour 2 
577=l\nhttps\://www.tutorialspoint.com/spring/spring_interview_questions.htm
214=su prick
576=http\://www.lucidity.com/LucidDreamingFAQ2.html
213=si cactus
575=http\://www.lifehack.org/articles/productivity/20-amazing-facts-about-dreams-that-you-might-not-know-about.html
212=sd cactus
574=http\://www.womansday.com/health-fitness/wellness/a1884/9-things-you-didnt-know-about-dreams-110657/
211=http\://www.thetoptens.com/best-insults/
573=l\nhttp\://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html
210=i check iwht supper mand and he is not interested in blogging
572=l\nhttp\://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html
571=l\nhttp\://www.oodesign.com/
570=l\nhttps\://intellipaat.com/interview-question/cassandra-interview-questions/
209=http\://winterbe.com/posts/2015/04/07/java8-concurrency-tutorial-thread-executor-examples/
208=http\://solr-vs-elasticsearch.com/
207=http\://solr-vs-elasticsearch.com/
569=l\nhttps\://www.tutorialspoint.com/mongodb/mongodb_interview_questions.htm
206=https\://facebook.github.io/react/
568=l\nhttps\://intellipaat.com/interview-question/apache-storm-interview-questions/
205=http\://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important
567=l\nhttps\://www.edureka.co/blog/interview-questions/top-apache-spark-interview-questions-2016/
204=devcenter
566=l\nhttp\://career.guru99.com/top-25-interview-questions-on-scala/
203=devcenter
565=l\nhttp\://howtodoinjava.com/core-java/collections/java-8-tutorial-streams-by-examples/
202=http\://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important
564=sg how ti increase performance for java multiple threading
201=devcenter
563=l\nhttp\://winterbe.com/posts/2015/05/22/java8-concurrency-tutorial-atomic-concurrent-map-examples/
200=http\://stackoverflow.com/questions/992988/what-is-sharding-and-why-is-it-important
562=l\nhttp\://docs.aws.amazon.com/gettingstarted/latest/swh/website-hosting-intro.html
561=l\nhttps\://aws.amazon.com/ec2/
560=l\nhttp\://howtodoinjava.com/core-java/collections/java-8-tutorial-streams-by-examples/
559=l\nhttp\://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/gsg-aws-tutorials.html
558=l\nhttp\://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/gsg-aws-tutorials.html
557=https\://git-scm.com/book/en/v2/Git-Basics-Tagging
556=onenote 
555=linda
554=what is clojure?
553=java brains jaxrs restful api\=https\://javabrains.io/courses/javaee_jaxrs
552=l\nhttps\://resources.jetbrains.com/assets/products/intellij-idea/IntelliJIDEA_ReferenceCard.pdf
551=what is single responsibility principles?
550=https\://en.wikipedia.org/wiki/Code_smell
549=https\://javabrains.io/courses/javaee_jaxrs
548=sd puddle
547=sd surreal
546=123 movies\=http\://123movies.is/
545=http\://tutorials.jenkov.com/software-architecture/n-tier-architecture.html
544=http\://www.mind-your-reality.com/seven_universal_laws.html
543=http\://www.greaterreality.com/nospace.htm
542=http\://howtodoinjava.com/core-java/generics/complete-java-generics-tutorial/
541=\rit is my wife then yes\n\nyes to my wife i only care aobut mmy wife\n Dufgt \r\n\r\n\r\nGood Morning C1 world, Wed, Dec 7, 2016 at 05\:36 am\r\n20) Would you be willing to lie to a court for a close friend if it meant saving your friend from going to jail for life?\r\n
540=java 8 best practice 
539=java java 8 best practice 
538=i just wadont' want to leanr i t 
537=http\://howtodoinjava.com/core-java/collections/java-8-tutorial-streams-by-examples/
899=sd divvy
536=time associate with the action \nwhen do you wan tit \nwhen do you want it\nwhen do you want it \nwhere do you want it \nwho do you want i t\nscheduler for the intes 
898=What is backward tracing vs. forward tracing
535=abuizeng
897=60\nhttps\://www.tutorialspoint.com/struts_2/struts_result_types.htm
534=l\nsg how to prepare for technical interview??
896=l\nhttps\://www.tutorialspoint.com/nodejs/nodejs_utility_module.htm
533=sg there is no space
895=30\nhttps\://www.tutorialspoint.com/spring/spring_transaction_management.htm
532=there is no space
894=30\nhttp\://www.mkyong.com/tag/spring-boot/
531=how are you?
893=120\nhttps\://www.tutorialspoint.com/hibernate/hibernate_persistent_classes.htm
530=how are you?
892=60\nhttp\://docs.scala-lang.org/overviews/collections/introduction.html
891=l\nhttp\://docs.scala-lang.org/overviews/?_ga\=1.32249278.1253417003.1481852729
890=180\nhttp\://www.scala-lang.org/documentation/getting-started.html
529=how are you?
528=how are you?
527=how are you?
889=30\nhttps\://www.tutorialspoint.com/struts_2/struts_actions.htm
526=1\nsg how are you?
888=60\nhttps\://www.tutorialspoint.com/hibernate/hibernate_criteria_queries.htm
525=1\nsg how are you?
887=189\nhttp\://www.w3schools.com/jquery/jquery_dimensions.asp
524=1\nsg how are you?
886=60\nhttps\://www.tutorialspoint.com/hibernate/hibernate_persistent_classes.htm
523=1\nsg how are you?
885=60\nhttps\://www.tutorialspoint.com/struts_2/struts_type_conversion.htm
522=1\nsg how are you?
884=120\nhttps\://www.tutorialspoint.com/hibernate/hibernate_mapping_types.htm
521=1\nsg how are you?
883=60\nhttp\://www.thetoptens.com/best-insults/
520=1\nsg how are you?
882=60\nhttps\://www.tutorialspoint.com/apache_kafka/apache_kafka_introduction.htm
881=sd ammunition
880=sd incendiary
519=1\nsg how are you?
518=1\nsg how are you?
517=1\nsg how are you?
879=30\nhttp\://blog.flux7.com/blogs/docker/docker-tutorial-series-part-1-an-introduction
516=1\nsg how are you?
878=120\nhttp\://www.mkyong.com/spring-mvc/spring-mvc-exception-handling-example/
515=1\nsg how are you?
877=error meessage customization error handling
514=1\nsg how are you?
876=180\nhttps\://www.tutorialspoint.com/design_pattern/filter_pattern.htm
513=1\nsg how are you?
875=Can you name different measures to guarantee correctness of data entry?
512=1\nbi how are you?
874=Traveling Salesman Problem
511=you don't kneed to show you emotion\n\nit is everywhere\nit is seduxing when you showing it because you want ti t\n\nyou acan get it from everywhere and it is connecting you to everything \n\n\neverything is arewawre of you everything is know you \n\nthis movie is so cool and it tell us that we are all conneected and theis ia s\nthe truethc and fact we know it from the buttom ofr our hreart bcaseu we know \n\nit all the whole universe is aonccete addn that is it all \n\nwe thought that we are disconenected but we are actually connect aed as one in our gene and \nthat is the undeinialble facts thewr are are fall facintg\ni chasing love and love and what tif there is a down load therne i should tstop \nhi have to chase what really matter to me and doi t now.\n
873=When do you use polymorphism and when do you use delegates?
510=bi Don't Stop Believin' (Live in Houston)
872=sd stupor
871=react js tutorial
870=180\nhttps\://www.tutorialspoint.com/nodejs/nodejs_file_system.htm
509=music
508=Stressed out 
507=stress out
869=caching
506=music
868=sd kino
505=https\://en.wikipedia.org/wiki/Letter_frequency
867=what is spring boot
504=hotmail
866=1\ngod
503=siyuanzeng
865=how are you
502=word
864=how are you
501=everything connects and the close one is the bone you own that is why and everything can be beteter closer there might not be any relationship but the space and time is the clotsetest than anything else \nwhat i sthe universal relatiopnship that matters everything all teogether\nthe thisg is the coexist
863=how are you
500=ice age 
862=Explain System.out.println() in detail
861=http\://stackoverflow.com/questions/3035601/performance-profiler-for-a-java-application
860=sd psychopathy
859=sd callous
858=180\nhttp\://www.w3schools.com/jquery/jquery_hide_show.asp
857=l\nhttps\://www.tutorialspoint.com/struts_2/struts_actions.htm
856=l\nhttps\://www.tutorialspoint.com/hibernate/hibernate_interceptors.htm
855=l\nhttp\://tutorials.jenkov.com/software-architecture/ria-architecture.html
854=Can you name some differences between DSDM, Prince2 and Scrum?
853=sd prejudice
852=l\nhttps\://www.tutorialspoint.com/nodejs/nodejs_global_objects.htm
851=https\://images.search.yahoo.com/yhs/search;_ylt\=AwrTcdvKzz9YID4ANy8nnIlQ?p\=critical+thinking+vs+non&fr\=yhs-mozilla-001&fr2\=piv-web&hspart\=mozilla&hsimp\=yhs-001\#id\=9&iurl\=https%3A%2F%2Fvigornotrigor.files.wordpress.com%2F2014%2F08%2Fkindsofthinking.jpg&action\=click
850=sd Yank
849=Lombok
848=l\nhttps\://www.mapr.com/products/mapr-sandbox-hadoop/tutorials/spark-tutorial
847=l\nhttps\://www.tutorialspoint.com/apache_spark/apache_spark_core_programming.htm
846=sd blow up
845=java gabage collector
844=sd gulp
843=nodsql comparisons
842=l\nhttps\://www.dezyre.com/hadoop-tutorial/apache-hive-tutorial-tables
841=FLUSH PRIVILEGES;\n
840=sd scaffold
839=l\nhttps\://www.tutorialspoint.com/ruby-on-rails/rails-active-records.htm
838=l\nhttps\://www.tutorialspoint.com/nodejs/nodejs_buffers.htm
837=l\nhttp\://www.javatpoint.com/history-of-java
836=sd sprinter
835=sd overdrive
834=sd carryover
833=sd hypertrophy
832=java 8 stream fuctions
831=java 8 stream fuctions
830=business component developer
829=Flume
828=60\nhttp\://www.w3schools.com/jquery/jquery_chaining.asp
827=sd napalm
826=sd corollary
825=https\://git-scm.com/book/en/v2/Git-Branching-Summary
824=EJB tutorial
823=Tapestry
822=sd Percolation
821=l\nhttp\://career.guru99.com/top-25-jms-java-message-service-interview-questions/
820=l\nhttp\://www.careerride.com/performance-testing-interview-questions.aspx
819=they want me to wro ko n it myself and not j ramdom develoepresr
818=sd neurotic
817=sd psychopathic
816=sd neg
815=l\nhttp\://www.dailywritingtips.com/100-mostly-small-but-expressive-interjections/
814=l\nhttp\://www.mkyong.com/webservices/jax-rs/file-upload-example-in-jersey/
813=divergent thinking
812=convergent thinking
811=https\://www.tutorialspoint.com/nodejs/nodejs_file_system.htm
810=https\://lunarscience.nasa.gov/articles/beware-of-images/
809=Resume Real Jan 2nd\=C\:\\Users\\SiyuanZeng's\\Desktop\\application\\Job hunting\\Resume\\Latest\\Real January
808=why log4j
807=shy is log4j
806=28) If you could only have one meal for the rest of your life, what would it be?\n
805=dml OPERATION
804=DDL operation
803=l\nhttps\://www.tutorialspoint.com/hibernate/hibernate_interview_questions.htm
802=sd Freudian
801=sd engorged
800=l\nhttp\://www.tutorialspoint.com/restful/restful_jax_rs.htm
9=history
8=history
7=history
6=bi java swing keyevent key stroke
5=bi java swing keybinding
4=bi contral and up key java swing
3=bi UP key java swing
2=bi hello
1=bi up key keyboard code
0=bi hello
